name: Build and Deploy to Raspberry Pi

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

# Förhindra flera samtidiga deploys
concurrency:
  group: production-deploy
  cancel-in-progress: false

jobs:
  # Testa och bygg (körs alltid)
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build Backend
        run: |
          cd apps/backend/blitzduel
          mvn clean package -DskipTests

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/frontend/blitzduel/package-lock.json

      - name: Build Frontend
        run: |
          cd apps/frontend/blitzduel
          npm ci
          npm run build

  # Pusha till Docker Hub (bara på main)
  push-to-dockerhub:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./apps/backend/blitzduel
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/blitzduel-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blitzduel-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blitzduel-backend:buildcache,mode=max

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./apps/frontend/blitzduel
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/blitzduel-frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blitzduel-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blitzduel-frontend:buildcache,mode=max

  # Deploya till Raspberry Pi (bara på main)
  deploy:
    needs: push-to-dockerhub
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env

      - name: Pull latest images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/blitzduel-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/blitzduel-frontend:latest

      - name: Stop old containers
        run: |
          docker compose down || true

      - name: Start new containers
        run: |
          docker compose up -d --remove-orphans

      - name: Clean up old images
        run: |
          docker image prune -af

      - name: Check running containers
        run: |
          sleep 10
          docker ps